datasource db {
    provider = "postgresql"
    url = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id String @id @default(cuid())
    email String @unique
    password String @password @omit
    orders Order[]
}

model Pet {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    name String
    category String
    order Order? @relation(fields: [orderId], references: [id])
    orderId String?

    // unsold pets are readable to all; sold ones are readable to buyers only
    @@allow('read', orderId == null || order.user == auth())

    // only allow update to 'orderId' field if it's not set yet (unsold)
    @@allow('update', name == future().name && category == future().category && orderId == null )
}

model Order {
    id String @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    pets Pet[]
    user User @relation(fields: [userId], references: [id])
    userId String

    // users can read their orders
    @@allow('read,create', auth() == user)
}






// default code

// This is a sample model to get you started.

/**
 * A sample data source using local sqlite db.
 */
// datasource db {
//     provider = 'sqlite'
//     url = 'file:./dev.db'
// }

// generator client {
//     provider = "prisma-client-js"
// }

/**
 * User model
 */
// model User {
//     id String @id @default(cuid())
//     email String @unique @email
//     password String @password @omit @length(8, 16)
//     posts Post[]

//     // everybody can signup
//     @@allow('create', true)

//     // full access by self
//     @@allow('all', auth() == this)
// }

/**
 * Post model
 */
// model Post {
//     id String @id @default(cuid())
//     createdAt DateTime @default(now())
//     updatedAt DateTime @updatedAt
//     title String @length(1, 256)
//     content String
//     published Boolean @default(false)
//     author User @relation(fields: [authorId], references: [id])
//     authorId String

//     // allow read for all signin users
//     @@allow('read', auth() != null && published)

//     // full access by author
//     @@allow('all', author == auth())
// }

